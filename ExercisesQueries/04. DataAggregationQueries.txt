--------------------------------------------------------------------
01. Records Count
--------------------------------------------------------------------
SELECT COUNT(*) AS 'Count' FROM WizzardDeposits
--------------------------------------------------------------------
02. Longest Magic Wand
--------------------------------------------------------------------
SELECT TOP 1 [MagicWandSize] AS 'LongestMagicWand'
FROM WizzardDeposits
ORDER BY [MagicWandSize] DESC
--------------------------------------------------------------------
03. Longest Magic Wand per Deposit Groups
--------------------------------------------------------------------
SELECT wd.DepositGroup, MAX(wp.MagicWandSize) AS 'LongestMagicWand'
FROM WizzardDeposits AS wd
GROUP BY wd.DepositGroup
--------------------------------------------------------------------
04. Smallest Deposit Group per Magic Wand Size
--------------------------------------------------------------------
SELECT TOP 2 wd.DepositGroup
FROM WizzardDeposits AS wd
GROUP BY wd.DepositGroup
ORDER BY AVG(wd.MagicWandSize)
--------------------------------------------------------------------
05. Deposit Sum
--------------------------------------------------------------------
SELECT wd.DepositGroup, SUM(wd.DepositAmount) AS 'TotalSum'
FROM WizzardDeposits AS wd
GROUP BY wd.DepositGroup
--------------------------------------------------------------------
06. Deposits Sum for Ollivander Family
--------------------------------------------------------------------
SELECT wd.DepositGroup, SUM(wd.DepositAmount) AS 'TotalSum'
FROM WizzardDeposits AS wd
WHERE wd.MagicWandCreator = 'Ollivander family'
GROUP BY wd.DepositGroup
--------------------------------------------------------------------
07. Deposits Filter
--------------------------------------------------------------------
SELECT wd.DepositGroup, SUM(wd.DepositAmount) AS 'TotalSum'
FROM WizzardDeposits AS wd
WHERE wd.MagicWandCreator = 'Ollivander family'
GROUP BY wd.DepositGroup
HAVING SUM(wd.DepositAmount) < 150000
ORDER BY TotalSum DESC
--------------------------------------------------------------------
08. Deposit Charge
--------------------------------------------------------------------
SELECT wd.DepositGroup, wd.MagicWandCreator, MIN(wd.DepositCharge) AS 'MinDepositCharge'
FROM WizzardDeposits AS wd
GROUP BY wd.DepositGroup, wd.MagicWandCreator
ORDER BY wd.MagicWandCreator, wd.DepositGroup
--------------------------------------------------------------------
09. Age Groups
--------------------------------------------------------------------
SELECT 
	CASE
		WHEN wd.Age >= 0 AND wd.Age <= 10 THEN '[0-10]'
		WHEN wd.Age >= 11 AND wd.Age <= 20 THEN '[11-20]'
		WHEN wd.Age >= 21 AND wd.Age <= 30 THEN '[21-30]'
		WHEN wd.Age >= 31 AND wd.Age <= 40 THEN '[31-40]'
		WHEN wd.Age >= 41 AND wd.Age <= 50 THEN '[41-50]'
		WHEN wd.Age >= 51 AND wd.Age <= 60 THEN '[51-60]'
		ELSE '[61+]'
	END AS [AgeGroup], COUNT(*)  AS 'WizzardCount'
FROM WizzardDeposits AS wd
GROUP BY CASE
		WHEN wd.Age >= 0 AND wd.Age <= 10 THEN '[0-10]'
		WHEN wd.Age >= 11 AND wd.Age <= 20 THEN '[11-20]'
		WHEN wd.Age >= 21 AND wd.Age <= 30 THEN '[21-30]'
		WHEN wd.Age >= 31 AND wd.Age <= 40 THEN '[31-40]'
		WHEN wd.Age >= 41 AND wd.Age <= 50 THEN '[41-50]'
		WHEN wd.Age >= 51 AND wd.Age <= 60 THEN '[51-60]'
		ELSE '[61+]'
	END 
--------------------------------------------------------------------
10. First Letter
--------------------------------------------------------------------
SELECT LEFT([FirstName], 1) AS 'FirstLetter'
FROM WizzardDeposits
WHERE [DepositGroup] = 'Troll Chest'
GROUP BY LEFT([FirstName], 1)
--------------------------------------------------------------------
11. Average Interest
--------------------------------------------------------------------
SELECT wd.DepositGroup, wd.IsDepositExpired, AVG(wd.DepositInterest)
FROM WizzardDeposits AS wd
WHERE wd.DepositStartDate >= '01/01/1985'
GROUP BY wd.DepositGroup, wd.IsDepositExpired
ORDER BY wd.DepositGroup DESC, wd.IsDepositExpired
--------------------------------------------------------------------
12. Rich Wizard, Poor Wizard
--------------------------------------------------------------------
SELECT 
	SUM(HostWizards.DepositAmount - GuestWizards.DepositAmount)
FROM 
	WizzardDeposits AS HostWizards
INNER JOIN 
	WizzardDeposits AS GuestWizards
ON 
	HostWizards.Id + 1 = GuestWizards.Id
--------------------------------------------------------------------
13. Employees Minimum Salaries
--------------------------------------------------------------------
SELECT e.DepartmentID, MIN([Salary])
FROM Employees AS e
WHERE e.HireDate > '01/01/2000'
GROUP BY e.DepartmentID
HAVING e.DepartmentID IN (2, 5, 7)
--------------------------------------------------------------------
14. Employees Average Salaries
--------------------------------------------------------------------
SELECT e.DepartmentID, e.Salary, e.ManagerID
INTO NewEmployees 
FROM Employees AS e
WHERE e.Salary > 30000

DELETE FROM NewEmployees
WHERE NewEmployees.ManagerID = 42

UPDATE NewEmployees 
SET Salary += 5000
WHERE DepartmentID = 1

SELECT ne.DepartmentID, AVG(ne.Salary)
FROM NewEmployees AS ne
GROUP BY ne.DepartmentID
--------------------------------------------------------------------
15. Employees Maximum Salaries
--------------------------------------------------------------------
SELECT * FROM
(SELECT e.DepartmentID, MAX(e.Salary) AS MaxSalary
FROM Employees AS e
GROUP BY e.DepartmentID) AS ms
WHERE ms.MaxSalary NOT BETWEEN 30000 AND 70000
--------------------------------------------------------------------
16. Employees Count Salaries
--------------------------------------------------------------------
SELECT COUNT(*) AS Count
FROM Employees AS e
WHERE e.ManagerID IS NULL
--------------------------------------------------------------------
17. 3rd Highest Salary
--------------------------------------------------------------------
SELECT DISTINCT sal.DepartmentID, sal.Salary  FROM
(SELECT e.DepartmentID, e.Salary, DENSE_RANK() OVER (PARTITION BY e.DepartmentID ORDER BY e.Salary DESC) AS SalaryRank
FROM Employees AS e) AS sal
WHERE sal.SalaryRank = 3
--------------------------------------------------------------------
18. Salary Challenge
--------------------------------------------------------------------
SELECT TOP 10 e.FirstName, e.LastName, e.DepartmentID
FROM Employees AS e
	INNER JOIN (SELECT es.DepartmentID, AVG(es.Salary) AS AverageSalary
	FROM Employees AS es
	GROUP BY es.DepartmentID) AS ds
	ON e.DepartmentID = ds.DepartmentID
		AND e.Salary > ds.AverageSalary
	ORDER BY e.DepartmentID
